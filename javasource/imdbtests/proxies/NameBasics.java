// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package imdbtests.proxies;

public class NameBasics
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject nameBasicsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ImdbTests.NameBasics";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		NameId("NameId"),
		PrimaryName("PrimaryName"),
		BirthYear("BirthYear"),
		DeathYear("DeathYear"),
		PrimaryProfession("PrimaryProfession"),
		KnownForTitles("KnownForTitles"),
		Principals_Name("ImdbTests.Principals_Name");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public NameBasics(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected NameBasics(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject nameBasicsMendixObject)
	{
		if (nameBasicsMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, nameBasicsMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.nameBasicsMendixObject = nameBasicsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'NameBasics.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static imdbtests.proxies.NameBasics initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return imdbtests.proxies.NameBasics.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static imdbtests.proxies.NameBasics initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new imdbtests.proxies.NameBasics(context, mendixObject);
	}

	public static imdbtests.proxies.NameBasics load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return imdbtests.proxies.NameBasics.initialize(context, mendixObject);
	}

	public static java.util.List<imdbtests.proxies.NameBasics> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> imdbtests.proxies.NameBasics.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of NameId
	 */
	public final java.lang.String getNameId()
	{
		return getNameId(getContext());
	}

	/**
	 * @param context
	 * @return value of NameId
	 */
	public final java.lang.String getNameId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.NameId.toString());
	}

	/**
	 * Set value of NameId
	 * @param nameid
	 */
	public final void setNameId(java.lang.String nameid)
	{
		setNameId(getContext(), nameid);
	}

	/**
	 * Set value of NameId
	 * @param context
	 * @param nameid
	 */
	public final void setNameId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String nameid)
	{
		getMendixObject().setValue(context, MemberNames.NameId.toString(), nameid);
	}

	/**
	 * @return value of PrimaryName
	 */
	public final java.lang.String getPrimaryName()
	{
		return getPrimaryName(getContext());
	}

	/**
	 * @param context
	 * @return value of PrimaryName
	 */
	public final java.lang.String getPrimaryName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PrimaryName.toString());
	}

	/**
	 * Set value of PrimaryName
	 * @param primaryname
	 */
	public final void setPrimaryName(java.lang.String primaryname)
	{
		setPrimaryName(getContext(), primaryname);
	}

	/**
	 * Set value of PrimaryName
	 * @param context
	 * @param primaryname
	 */
	public final void setPrimaryName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String primaryname)
	{
		getMendixObject().setValue(context, MemberNames.PrimaryName.toString(), primaryname);
	}

	/**
	 * @return value of BirthYear
	 */
	public final java.lang.Integer getBirthYear()
	{
		return getBirthYear(getContext());
	}

	/**
	 * @param context
	 * @return value of BirthYear
	 */
	public final java.lang.Integer getBirthYear(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.BirthYear.toString());
	}

	/**
	 * Set value of BirthYear
	 * @param birthyear
	 */
	public final void setBirthYear(java.lang.Integer birthyear)
	{
		setBirthYear(getContext(), birthyear);
	}

	/**
	 * Set value of BirthYear
	 * @param context
	 * @param birthyear
	 */
	public final void setBirthYear(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer birthyear)
	{
		getMendixObject().setValue(context, MemberNames.BirthYear.toString(), birthyear);
	}

	/**
	 * @return value of DeathYear
	 */
	public final java.lang.Integer getDeathYear()
	{
		return getDeathYear(getContext());
	}

	/**
	 * @param context
	 * @return value of DeathYear
	 */
	public final java.lang.Integer getDeathYear(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.DeathYear.toString());
	}

	/**
	 * Set value of DeathYear
	 * @param deathyear
	 */
	public final void setDeathYear(java.lang.Integer deathyear)
	{
		setDeathYear(getContext(), deathyear);
	}

	/**
	 * Set value of DeathYear
	 * @param context
	 * @param deathyear
	 */
	public final void setDeathYear(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer deathyear)
	{
		getMendixObject().setValue(context, MemberNames.DeathYear.toString(), deathyear);
	}

	/**
	 * @return value of PrimaryProfession
	 */
	public final java.lang.String getPrimaryProfession()
	{
		return getPrimaryProfession(getContext());
	}

	/**
	 * @param context
	 * @return value of PrimaryProfession
	 */
	public final java.lang.String getPrimaryProfession(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PrimaryProfession.toString());
	}

	/**
	 * Set value of PrimaryProfession
	 * @param primaryprofession
	 */
	public final void setPrimaryProfession(java.lang.String primaryprofession)
	{
		setPrimaryProfession(getContext(), primaryprofession);
	}

	/**
	 * Set value of PrimaryProfession
	 * @param context
	 * @param primaryprofession
	 */
	public final void setPrimaryProfession(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String primaryprofession)
	{
		getMendixObject().setValue(context, MemberNames.PrimaryProfession.toString(), primaryprofession);
	}

	/**
	 * @return value of KnownForTitles
	 */
	public final java.lang.String getKnownForTitles()
	{
		return getKnownForTitles(getContext());
	}

	/**
	 * @param context
	 * @return value of KnownForTitles
	 */
	public final java.lang.String getKnownForTitles(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.KnownForTitles.toString());
	}

	/**
	 * Set value of KnownForTitles
	 * @param knownfortitles
	 */
	public final void setKnownForTitles(java.lang.String knownfortitles)
	{
		setKnownForTitles(getContext(), knownfortitles);
	}

	/**
	 * Set value of KnownForTitles
	 * @param context
	 * @param knownfortitles
	 */
	public final void setKnownForTitles(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String knownfortitles)
	{
		getMendixObject().setValue(context, MemberNames.KnownForTitles.toString(), knownfortitles);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Principals_Name
	 */
	public final imdbtests.proxies.Principals getPrincipals_Name() throws com.mendix.core.CoreException
	{
		return getPrincipals_Name(getContext());
	}

	/**
	 * @param context
	 * @return value of Principals_Name
	 * @throws com.mendix.core.CoreException
	 */
	public final imdbtests.proxies.Principals getPrincipals_Name(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		imdbtests.proxies.Principals result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Principals_Name.toString());
		if (identifier != null) {
			result = imdbtests.proxies.Principals.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Principals_Name
	 * @param principals_name
	 */
	public final void setPrincipals_Name(imdbtests.proxies.Principals principals_name)
	{
		setPrincipals_Name(getContext(), principals_name);
	}

	/**
	 * Set value of Principals_Name
	 * @param context
	 * @param principals_name
	 */
	public final void setPrincipals_Name(com.mendix.systemwideinterfaces.core.IContext context, imdbtests.proxies.Principals principals_name)
	{
		if (principals_name == null) {
			getMendixObject().setValue(context, MemberNames.Principals_Name.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Principals_Name.toString(), principals_name.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return nameBasicsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final imdbtests.proxies.NameBasics that = (imdbtests.proxies.NameBasics) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
