// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package imdbtests.proxies;

public class Ratings
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject ratingsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ImdbTests.Ratings";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TitleId("TitleId"),
		AverageRating("AverageRating"),
		NumVotes("NumVotes"),
		Ratings_Title("ImdbTests.Ratings_Title");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Ratings(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "ImdbTests.Ratings"));
	}

	protected Ratings(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject ratingsMendixObject)
	{
		if (ratingsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("ImdbTests.Ratings", ratingsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a ImdbTests.Ratings");

		this.ratingsMendixObject = ratingsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Ratings.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static imdbtests.proxies.Ratings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return imdbtests.proxies.Ratings.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static imdbtests.proxies.Ratings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new imdbtests.proxies.Ratings(context, mendixObject);
	}

	public static imdbtests.proxies.Ratings load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return imdbtests.proxies.Ratings.initialize(context, mendixObject);
	}

	public static java.util.List<imdbtests.proxies.Ratings> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<imdbtests.proxies.Ratings> result = new java.util.ArrayList<imdbtests.proxies.Ratings>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//ImdbTests.Ratings" + xpathConstraint))
			result.add(imdbtests.proxies.Ratings.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of TitleId
	 */
	public final java.lang.String getTitleId()
	{
		return getTitleId(getContext());
	}

	/**
	 * @param context
	 * @return value of TitleId
	 */
	public final java.lang.String getTitleId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TitleId.toString());
	}

	/**
	 * Set value of TitleId
	 * @param titleid
	 */
	public final void setTitleId(java.lang.String titleid)
	{
		setTitleId(getContext(), titleid);
	}

	/**
	 * Set value of TitleId
	 * @param context
	 * @param titleid
	 */
	public final void setTitleId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String titleid)
	{
		getMendixObject().setValue(context, MemberNames.TitleId.toString(), titleid);
	}

	/**
	 * @return value of AverageRating
	 */
	public final java.math.BigDecimal getAverageRating()
	{
		return getAverageRating(getContext());
	}

	/**
	 * @param context
	 * @return value of AverageRating
	 */
	public final java.math.BigDecimal getAverageRating(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.AverageRating.toString());
	}

	/**
	 * Set value of AverageRating
	 * @param averagerating
	 */
	public final void setAverageRating(java.math.BigDecimal averagerating)
	{
		setAverageRating(getContext(), averagerating);
	}

	/**
	 * Set value of AverageRating
	 * @param context
	 * @param averagerating
	 */
	public final void setAverageRating(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal averagerating)
	{
		getMendixObject().setValue(context, MemberNames.AverageRating.toString(), averagerating);
	}

	/**
	 * @return value of NumVotes
	 */
	public final java.lang.Long getNumVotes()
	{
		return getNumVotes(getContext());
	}

	/**
	 * @param context
	 * @return value of NumVotes
	 */
	public final java.lang.Long getNumVotes(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.NumVotes.toString());
	}

	/**
	 * Set value of NumVotes
	 * @param numvotes
	 */
	public final void setNumVotes(java.lang.Long numvotes)
	{
		setNumVotes(getContext(), numvotes);
	}

	/**
	 * Set value of NumVotes
	 * @param context
	 * @param numvotes
	 */
	public final void setNumVotes(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long numvotes)
	{
		getMendixObject().setValue(context, MemberNames.NumVotes.toString(), numvotes);
	}

	/**
	 * @return value of Ratings_Title
	 */
	public final imdbtests.proxies.Title getRatings_Title() throws com.mendix.core.CoreException
	{
		return getRatings_Title(getContext());
	}

	/**
	 * @param context
	 * @return value of Ratings_Title
	 */
	public final imdbtests.proxies.Title getRatings_Title(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		imdbtests.proxies.Title result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Ratings_Title.toString());
		if (identifier != null)
			result = imdbtests.proxies.Title.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Ratings_Title
	 * @param ratings_title
	 */
	public final void setRatings_Title(imdbtests.proxies.Title ratings_title)
	{
		setRatings_Title(getContext(), ratings_title);
	}

	/**
	 * Set value of Ratings_Title
	 * @param context
	 * @param ratings_title
	 */
	public final void setRatings_Title(com.mendix.systemwideinterfaces.core.IContext context, imdbtests.proxies.Title ratings_title)
	{
		if (ratings_title == null)
			getMendixObject().setValue(context, MemberNames.Ratings_Title.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Ratings_Title.toString(), ratings_title.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return ratingsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final imdbtests.proxies.Ratings that = (imdbtests.proxies.Ratings) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "ImdbTests.Ratings";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
