// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package imdbtests.proxies;

public class Principals
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject principalsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ImdbTests.Principals";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TitleId("TitleId"),
		Ordering("Ordering"),
		PersonId("PersonId"),
		Category("Category"),
		Job("Job"),
		Characters("Characters"),
		Principals_Title("ImdbTests.Principals_Title"),
		Principals_Name("ImdbTests.Principals_Name");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Principals(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Principals(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject principalsMendixObject)
	{
		if (principalsMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, principalsMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.principalsMendixObject = principalsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Principals.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static imdbtests.proxies.Principals initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return imdbtests.proxies.Principals.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static imdbtests.proxies.Principals initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new imdbtests.proxies.Principals(context, mendixObject);
	}

	public static imdbtests.proxies.Principals load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return imdbtests.proxies.Principals.initialize(context, mendixObject);
	}

	public static java.util.List<imdbtests.proxies.Principals> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> imdbtests.proxies.Principals.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of TitleId
	 */
	public final java.lang.String getTitleId()
	{
		return getTitleId(getContext());
	}

	/**
	 * @param context
	 * @return value of TitleId
	 */
	public final java.lang.String getTitleId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TitleId.toString());
	}

	/**
	 * Set value of TitleId
	 * @param titleid
	 */
	public final void setTitleId(java.lang.String titleid)
	{
		setTitleId(getContext(), titleid);
	}

	/**
	 * Set value of TitleId
	 * @param context
	 * @param titleid
	 */
	public final void setTitleId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String titleid)
	{
		getMendixObject().setValue(context, MemberNames.TitleId.toString(), titleid);
	}

	/**
	 * @return value of Ordering
	 */
	public final java.lang.Long getOrdering()
	{
		return getOrdering(getContext());
	}

	/**
	 * @param context
	 * @return value of Ordering
	 */
	public final java.lang.Long getOrdering(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.Ordering.toString());
	}

	/**
	 * Set value of Ordering
	 * @param ordering
	 */
	public final void setOrdering(java.lang.Long ordering)
	{
		setOrdering(getContext(), ordering);
	}

	/**
	 * Set value of Ordering
	 * @param context
	 * @param ordering
	 */
	public final void setOrdering(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long ordering)
	{
		getMendixObject().setValue(context, MemberNames.Ordering.toString(), ordering);
	}

	/**
	 * @return value of PersonId
	 */
	public final java.lang.String getPersonId()
	{
		return getPersonId(getContext());
	}

	/**
	 * @param context
	 * @return value of PersonId
	 */
	public final java.lang.String getPersonId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PersonId.toString());
	}

	/**
	 * Set value of PersonId
	 * @param personid
	 */
	public final void setPersonId(java.lang.String personid)
	{
		setPersonId(getContext(), personid);
	}

	/**
	 * Set value of PersonId
	 * @param context
	 * @param personid
	 */
	public final void setPersonId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String personid)
	{
		getMendixObject().setValue(context, MemberNames.PersonId.toString(), personid);
	}

	/**
	 * @return value of Category
	 */
	public final java.lang.String getCategory()
	{
		return getCategory(getContext());
	}

	/**
	 * @param context
	 * @return value of Category
	 */
	public final java.lang.String getCategory(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Category.toString());
	}

	/**
	 * Set value of Category
	 * @param category
	 */
	public final void setCategory(java.lang.String category)
	{
		setCategory(getContext(), category);
	}

	/**
	 * Set value of Category
	 * @param context
	 * @param category
	 */
	public final void setCategory(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String category)
	{
		getMendixObject().setValue(context, MemberNames.Category.toString(), category);
	}

	/**
	 * @return value of Job
	 */
	public final java.lang.String getJob()
	{
		return getJob(getContext());
	}

	/**
	 * @param context
	 * @return value of Job
	 */
	public final java.lang.String getJob(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Job.toString());
	}

	/**
	 * Set value of Job
	 * @param job
	 */
	public final void setJob(java.lang.String job)
	{
		setJob(getContext(), job);
	}

	/**
	 * Set value of Job
	 * @param context
	 * @param job
	 */
	public final void setJob(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String job)
	{
		getMendixObject().setValue(context, MemberNames.Job.toString(), job);
	}

	/**
	 * @return value of Characters
	 */
	public final java.lang.String getCharacters()
	{
		return getCharacters(getContext());
	}

	/**
	 * @param context
	 * @return value of Characters
	 */
	public final java.lang.String getCharacters(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Characters.toString());
	}

	/**
	 * Set value of Characters
	 * @param characters
	 */
	public final void setCharacters(java.lang.String characters)
	{
		setCharacters(getContext(), characters);
	}

	/**
	 * Set value of Characters
	 * @param context
	 * @param characters
	 */
	public final void setCharacters(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String characters)
	{
		getMendixObject().setValue(context, MemberNames.Characters.toString(), characters);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Principals_Title
	 */
	public final imdbtests.proxies.Title getPrincipals_Title() throws com.mendix.core.CoreException
	{
		return getPrincipals_Title(getContext());
	}

	/**
	 * @param context
	 * @return value of Principals_Title
	 * @throws com.mendix.core.CoreException
	 */
	public final imdbtests.proxies.Title getPrincipals_Title(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		imdbtests.proxies.Title result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Principals_Title.toString());
		if (identifier != null) {
			result = imdbtests.proxies.Title.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Principals_Title
	 * @param principals_title
	 */
	public final void setPrincipals_Title(imdbtests.proxies.Title principals_title)
	{
		setPrincipals_Title(getContext(), principals_title);
	}

	/**
	 * Set value of Principals_Title
	 * @param context
	 * @param principals_title
	 */
	public final void setPrincipals_Title(com.mendix.systemwideinterfaces.core.IContext context, imdbtests.proxies.Title principals_title)
	{
		if (principals_title == null) {
			getMendixObject().setValue(context, MemberNames.Principals_Title.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Principals_Title.toString(), principals_title.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Principals_Name
	 */
	public final imdbtests.proxies.NameBasics getPrincipals_Name() throws com.mendix.core.CoreException
	{
		return getPrincipals_Name(getContext());
	}

	/**
	 * @param context
	 * @return value of Principals_Name
	 * @throws com.mendix.core.CoreException
	 */
	public final imdbtests.proxies.NameBasics getPrincipals_Name(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		imdbtests.proxies.NameBasics result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Principals_Name.toString());
		if (identifier != null) {
			result = imdbtests.proxies.NameBasics.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Principals_Name
	 * @param principals_name
	 */
	public final void setPrincipals_Name(imdbtests.proxies.NameBasics principals_name)
	{
		setPrincipals_Name(getContext(), principals_name);
	}

	/**
	 * Set value of Principals_Name
	 * @param context
	 * @param principals_name
	 */
	public final void setPrincipals_Name(com.mendix.systemwideinterfaces.core.IContext context, imdbtests.proxies.NameBasics principals_name)
	{
		if (principals_name == null) {
			getMendixObject().setValue(context, MemberNames.Principals_Name.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Principals_Name.toString(), principals_name.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return principalsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final imdbtests.proxies.Principals that = (imdbtests.proxies.Principals) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
