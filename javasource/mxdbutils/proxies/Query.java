// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mxdbutils.proxies;

public class Query
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject queryMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MxDbUtils.Query";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		sql("sql"),
		csv("csv"),
		query_type("query_type"),
		result_type("result_type");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Query(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Query(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject queryMendixObject)
	{
		if (queryMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, queryMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.queryMendixObject = queryMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Query.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static mxdbutils.proxies.Query initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return mxdbutils.proxies.Query.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static mxdbutils.proxies.Query initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mxdbutils.proxies.Query(context, mendixObject);
	}

	public static mxdbutils.proxies.Query load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mxdbutils.proxies.Query.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of sql
	 */
	public final java.lang.String getsql()
	{
		return getsql(getContext());
	}

	/**
	 * @param context
	 * @return value of sql
	 */
	public final java.lang.String getsql(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.sql.toString());
	}

	/**
	 * Set value of sql
	 * @param sql
	 */
	public final void setsql(java.lang.String sql)
	{
		setsql(getContext(), sql);
	}

	/**
	 * Set value of sql
	 * @param context
	 * @param sql
	 */
	public final void setsql(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String sql)
	{
		getMendixObject().setValue(context, MemberNames.sql.toString(), sql);
	}

	/**
	 * @return value of csv
	 */
	public final java.lang.String getcsv()
	{
		return getcsv(getContext());
	}

	/**
	 * @param context
	 * @return value of csv
	 */
	public final java.lang.String getcsv(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.csv.toString());
	}

	/**
	 * Set value of csv
	 * @param csv
	 */
	public final void setcsv(java.lang.String csv)
	{
		setcsv(getContext(), csv);
	}

	/**
	 * Set value of csv
	 * @param context
	 * @param csv
	 */
	public final void setcsv(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String csv)
	{
		getMendixObject().setValue(context, MemberNames.csv.toString(), csv);
	}

	/**
	 * Set value of query_type
	 * @param query_type
	 */
	public final mxdbutils.proxies.QueryType getquery_type()
	{
		return getquery_type(getContext());
	}

	/**
	 * @param context
	 * @return value of query_type
	 */
	public final mxdbutils.proxies.QueryType getquery_type(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.query_type.toString());
		if (obj == null) {
			return null;
		}
		return mxdbutils.proxies.QueryType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of query_type
	 * @param query_type
	 */
	public final void setquery_type(mxdbutils.proxies.QueryType query_type)
	{
		setquery_type(getContext(), query_type);
	}

	/**
	 * Set value of query_type
	 * @param context
	 * @param query_type
	 */
	public final void setquery_type(com.mendix.systemwideinterfaces.core.IContext context, mxdbutils.proxies.QueryType query_type)
	{
		if (query_type != null) {
			getMendixObject().setValue(context, MemberNames.query_type.toString(), query_type.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.query_type.toString(), null);
		}
	}

	/**
	 * Set value of result_type
	 * @param result_type
	 */
	public final mxdbutils.proxies.ResultType getresult_type()
	{
		return getresult_type(getContext());
	}

	/**
	 * @param context
	 * @return value of result_type
	 */
	public final mxdbutils.proxies.ResultType getresult_type(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.result_type.toString());
		if (obj == null) {
			return null;
		}
		return mxdbutils.proxies.ResultType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of result_type
	 * @param result_type
	 */
	public final void setresult_type(mxdbutils.proxies.ResultType result_type)
	{
		setresult_type(getContext(), result_type);
	}

	/**
	 * Set value of result_type
	 * @param context
	 * @param result_type
	 */
	public final void setresult_type(com.mendix.systemwideinterfaces.core.IContext context, mxdbutils.proxies.ResultType result_type)
	{
		if (result_type != null) {
			getMendixObject().setValue(context, MemberNames.result_type.toString(), result_type.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.result_type.toString(), null);
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return queryMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mxdbutils.proxies.Query that = (mxdbutils.proxies.Query) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
