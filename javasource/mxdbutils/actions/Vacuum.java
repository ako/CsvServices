// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mxdbutils.actions;

import java.sql.Connection;
import java.sql.Statement;
import java.util.function.Function;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.meta.IMetaObject;
import com.mendix.webui.CustomJavaAction;
import mxdbutils.helpers.DbHelper;

/**
 * Performs a VACUUM on a table (optional FULL).
 */
public class Vacuum extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String entity;
	private java.lang.Boolean full;

	public Vacuum(IContext context, java.lang.String entity, java.lang.Boolean full)
	{
		super(context);
		this.entity = entity;
		this.full = full;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		return Core.dataStorage().executeWithConnection(getContext(), vacuum(entity, full));
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Vacuum";
	}

	// BEGIN EXTRA CODE
	private Function<Connection, Boolean> vacuum(String entity, boolean full) {
		
		return connection -> {
			
			try {
				ILogNode logger = Core.getLogger(this.getClass().getSimpleName());
				IMetaObject metaObject = Core.getMetaObject(entity);
				
				logger.info("Vacuuming entity table " + Core.getDatabaseTableName(metaObject));
				{
					String sql = "VACUUM " + (full ? "FULL " : "") +  DbHelper.escapeIdentifier(connection, 
							Core.getDatabaseTableName(metaObject));
					Statement stat = connection.createStatement();
					stat.execute(sql);
					stat.close();
				}
			} catch (Exception e) {
				throw new RuntimeException(e);
			}
			
			return true;
		};
	}
	// END EXTRA CODE
}
