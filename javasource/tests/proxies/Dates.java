// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package tests.proxies;

public class Dates
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject datesMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Tests.Dates";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DateTime1("DateTime1"),
		DateTime2("DateTime2"),
		DateTime3("DateTime3"),
		DateTime4("DateTime4"),
		DateTime5("DateTime5"),
		DateTimeString("DateTimeString");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Dates(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Tests.Dates"));
	}

	protected Dates(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject datesMendixObject)
	{
		if (datesMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Tests.Dates", datesMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Tests.Dates");

		this.datesMendixObject = datesMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Dates.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static tests.proxies.Dates initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return tests.proxies.Dates.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static tests.proxies.Dates initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new tests.proxies.Dates(context, mendixObject);
	}

	public static tests.proxies.Dates load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return tests.proxies.Dates.initialize(context, mendixObject);
	}

	public static java.util.List<tests.proxies.Dates> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<tests.proxies.Dates> result = new java.util.ArrayList<tests.proxies.Dates>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Tests.Dates" + xpathConstraint))
			result.add(tests.proxies.Dates.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of DateTime1
	 */
	public final java.util.Date getDateTime1()
	{
		return getDateTime1(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTime1
	 */
	public final java.util.Date getDateTime1(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTime1.toString());
	}

	/**
	 * Set value of DateTime1
	 * @param datetime1
	 */
	public final void setDateTime1(java.util.Date datetime1)
	{
		setDateTime1(getContext(), datetime1);
	}

	/**
	 * Set value of DateTime1
	 * @param context
	 * @param datetime1
	 */
	public final void setDateTime1(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetime1)
	{
		getMendixObject().setValue(context, MemberNames.DateTime1.toString(), datetime1);
	}

	/**
	 * @return value of DateTime2
	 */
	public final java.util.Date getDateTime2()
	{
		return getDateTime2(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTime2
	 */
	public final java.util.Date getDateTime2(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTime2.toString());
	}

	/**
	 * Set value of DateTime2
	 * @param datetime2
	 */
	public final void setDateTime2(java.util.Date datetime2)
	{
		setDateTime2(getContext(), datetime2);
	}

	/**
	 * Set value of DateTime2
	 * @param context
	 * @param datetime2
	 */
	public final void setDateTime2(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetime2)
	{
		getMendixObject().setValue(context, MemberNames.DateTime2.toString(), datetime2);
	}

	/**
	 * @return value of DateTime3
	 */
	public final java.util.Date getDateTime3()
	{
		return getDateTime3(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTime3
	 */
	public final java.util.Date getDateTime3(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTime3.toString());
	}

	/**
	 * Set value of DateTime3
	 * @param datetime3
	 */
	public final void setDateTime3(java.util.Date datetime3)
	{
		setDateTime3(getContext(), datetime3);
	}

	/**
	 * Set value of DateTime3
	 * @param context
	 * @param datetime3
	 */
	public final void setDateTime3(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetime3)
	{
		getMendixObject().setValue(context, MemberNames.DateTime3.toString(), datetime3);
	}

	/**
	 * @return value of DateTime4
	 */
	public final java.util.Date getDateTime4()
	{
		return getDateTime4(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTime4
	 */
	public final java.util.Date getDateTime4(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTime4.toString());
	}

	/**
	 * Set value of DateTime4
	 * @param datetime4
	 */
	public final void setDateTime4(java.util.Date datetime4)
	{
		setDateTime4(getContext(), datetime4);
	}

	/**
	 * Set value of DateTime4
	 * @param context
	 * @param datetime4
	 */
	public final void setDateTime4(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetime4)
	{
		getMendixObject().setValue(context, MemberNames.DateTime4.toString(), datetime4);
	}

	/**
	 * @return value of DateTime5
	 */
	public final java.util.Date getDateTime5()
	{
		return getDateTime5(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTime5
	 */
	public final java.util.Date getDateTime5(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTime5.toString());
	}

	/**
	 * Set value of DateTime5
	 * @param datetime5
	 */
	public final void setDateTime5(java.util.Date datetime5)
	{
		setDateTime5(getContext(), datetime5);
	}

	/**
	 * Set value of DateTime5
	 * @param context
	 * @param datetime5
	 */
	public final void setDateTime5(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetime5)
	{
		getMendixObject().setValue(context, MemberNames.DateTime5.toString(), datetime5);
	}

	/**
	 * @return value of DateTimeString
	 */
	public final java.lang.String getDateTimeString()
	{
		return getDateTimeString(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTimeString
	 */
	public final java.lang.String getDateTimeString(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DateTimeString.toString());
	}

	/**
	 * Set value of DateTimeString
	 * @param datetimestring
	 */
	public final void setDateTimeString(java.lang.String datetimestring)
	{
		setDateTimeString(getContext(), datetimestring);
	}

	/**
	 * Set value of DateTimeString
	 * @param context
	 * @param datetimestring
	 */
	public final void setDateTimeString(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String datetimestring)
	{
		getMendixObject().setValue(context, MemberNames.DateTimeString.toString(), datetimestring);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return datesMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final tests.proxies.Dates that = (tests.proxies.Dates) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Tests.Dates";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
