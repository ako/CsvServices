// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package tests2.proxies;

public class Products
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject productsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Tests2.Products";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ProductID("ProductID"),
		Name("Name"),
		Description("Description"),
		Products_Category("Tests2.Products_Category");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Products(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Tests2.Products"));
	}

	protected Products(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject productsMendixObject)
	{
		if (productsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Tests2.Products", productsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Tests2.Products");

		this.productsMendixObject = productsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Products.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static tests2.proxies.Products initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return tests2.proxies.Products.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static tests2.proxies.Products initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new tests2.proxies.Products(context, mendixObject);
	}

	public static tests2.proxies.Products load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return tests2.proxies.Products.initialize(context, mendixObject);
	}

	public static java.util.List<tests2.proxies.Products> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<tests2.proxies.Products> result = new java.util.ArrayList<tests2.proxies.Products>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Tests2.Products" + xpathConstraint))
			result.add(tests2.proxies.Products.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ProductID
	 */
	public final java.lang.String getProductID()
	{
		return getProductID(getContext());
	}

	/**
	 * @param context
	 * @return value of ProductID
	 */
	public final java.lang.String getProductID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ProductID.toString());
	}

	/**
	 * Set value of ProductID
	 * @param productid
	 */
	public final void setProductID(java.lang.String productid)
	{
		setProductID(getContext(), productid);
	}

	/**
	 * Set value of ProductID
	 * @param context
	 * @param productid
	 */
	public final void setProductID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String productid)
	{
		getMendixObject().setValue(context, MemberNames.ProductID.toString(), productid);
	}

	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of Products_Category
	 */
	public final tests2.proxies.Category getProducts_Category() throws com.mendix.core.CoreException
	{
		return getProducts_Category(getContext());
	}

	/**
	 * @param context
	 * @return value of Products_Category
	 */
	public final tests2.proxies.Category getProducts_Category(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		tests2.proxies.Category result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Products_Category.toString());
		if (identifier != null)
			result = tests2.proxies.Category.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Products_Category
	 * @param products_category
	 */
	public final void setProducts_Category(tests2.proxies.Category products_category)
	{
		setProducts_Category(getContext(), products_category);
	}

	/**
	 * Set value of Products_Category
	 * @param context
	 * @param products_category
	 */
	public final void setProducts_Category(com.mendix.systemwideinterfaces.core.IContext context, tests2.proxies.Category products_category)
	{
		if (products_category == null)
			getMendixObject().setValue(context, MemberNames.Products_Category.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Products_Category.toString(), products_category.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return productsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final tests2.proxies.Products that = (tests2.proxies.Products) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Tests2.Products";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
